<?php

/**
 * @file
 * Functions to support theming in the Bartik theme.
 */

use Drupal\Core\Template\Attribute;

$theme_path = drupal_get_path('theme', 'gavias_emon');

include_once $theme_path . '/includes/template.functions.php';
include_once $theme_path . '/includes/functions.php';
include_once $theme_path . '/includes/template.menu.php';
include_once $theme_path . '/includes/oembed.php';
include_once $theme_path . '/includes/override.php';
include_once $theme_path . '/includes/shortcodes.php';

function gavias_emon_preprocess_page(&$variables) {

  global $theme, $base_url;
  $theme_path = drupal_get_path('theme', 'gavias_emon');
  $variables['sticky_menu'] = theme_get_setting('sticky_menu');
  $header = 'header';

  if(!empty(theme_get_setting('header_skin'))){
    $header = theme_get_setting('header_skin');
  }
  if(isset($_GET['gvask']) && $_GET['gvask']){
    $header = $_GET['gvask'];
  }
  if(file_exists($theme_path . '/templates/page/' . trim($header) . '.html.twig')){
    $variables['header_skin'] = '/templates/page/' . trim($header) . '.html.twig';
  }else{
    $variables['header_skin'] = '/templates/page/header-2.html.twig';
  }

  if(theme_get_setting('preloader') == '1'){
    $variables['preloader'] = 1;
  }else{
    $variables['preloader'] = 0;
  }

  $variables['theme_path'] = $base_url . '/' . $theme_path;

}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function gavias_emon_preprocess_html(&$variables) {
  global $theme, $base_url;
  global $parent_root;
  $theme_path = drupal_get_path('theme', 'gavias_emon');
  
  //Customize
  $user = \Drupal::currentUser();

  if(  \Drupal::moduleHandler()->moduleExists('gaviasthemer') && ($user->hasPermission('administer gavias_customize') || $user->hasPermission('administer gavias_customize preview')) && theme_get_setting('enable_panel') == '1'  ){
    $url_customize_save = \Drupal::url('gaviasthemer.admin.customize_save', array(), array('absolute' => TRUE));
    $variables['#attached']['drupalSettings']['gavias_customize']['save'] = $url_customize_save;  
    $url_customize_preview = \Drupal::url('gaviasthemer.admin.customize_preview', array(), array('absolute' => TRUE));
    $variables['#attached']['drupalSettings']['gavias_customize']['preview'] = $url_customize_preview;  
    $variables['#attached']['library'][] = 'gaviasthemer/customize';
    if(file_exists(drupal_get_path('theme', 'gavias_emon') . '/css/customize.json')){
      $variables['#attached']['drupalSettings']['gavias_customize']['path_json'] =  base_path() . $theme_path . '/css/customize.json';  
    }else{
      $variables['#attached']['drupalSettings']['gavias_customize']['path_json'] = '';
    }
    $variables['addon_template'] = '';
    $variables['save_customize_permission'] = 'hidden';
    if(file_exists($theme_path . '/templates/addon/skins.html.twig')){
      $variables['addon_template'] = '/templates/addon/skins.html.twig';
    }
    if($user->hasPermission('administer gavias_customize')){
      $variables['save_customize_permission'] = 'show';
    }
    $current_url = $_SERVER["HTTP_HOST"] . $_SERVER["REQUEST_URI"];
    $current_url = preg_replace('/([?&])display=[^&]+(&|$)/','$2',$current_url);
    if(strpos($current_url, '?')){
       $current_url .= '&';
    }
    else{
       $current_url .= '?';
    }
    $variables['current_url'] = $current_url;
  }

  $tmp_logo = theme_get_setting('logo');

  $variables['site_logo'] = $tmp_logo['url'];
  
  $variables['theme_path'] = base_path() . $theme_path;
  $custom_style = '';
  if(theme_get_setting('customize_css') ){
    // $config = \Drupal::config('gavias_emon.setting');
    $custom_style  = preg_replace( '!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', theme_get_setting('customize_css') );
    $custom_style = str_replace( array( "\r\n", "\r", "\n", "\t", '  ', '   ', '    ' ), '', $custom_style );
    $variables['customize_css'] =  $custom_style;
  }
  $skin = 'default';
  $skin = theme_get_setting('theme_skin');
  if(isset($_GET['gvas']) && $_GET['gvas']){
    $skin = $_GET['gvas'];
  }
  if(empty($skin)){
    $skin = 'default';
  }
  $variables['#attached']['library'][] = 'gavias_emon/monte.skin.' . $skin;

  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  if(theme_get_setting('site_layout') == 'boxed'){
    $variables['attributes']['class'][] = 'boxed';
  }
  
  if(theme_get_setting('preloader') == '1'){
      $variables['attributes']['class'][] = 'js-preloader';
   }else{
      $variables['attributes']['class'][] = 'not-preloader';
   }
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function bartik_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function gavias_emon_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function gavias_emon_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
 
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function gavias_emon_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function gavias_emon_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function gavias_emon_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}

